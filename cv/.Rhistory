""
)))) %>%
dplyr::bind_rows() %>%
dplyr::arrange(desc(year)) %>%
dplyr::select(text) %>%
purrr::map(writeLines)
fs::dir_ls(fs::path(jekyll_root, paste0("_", collections)),
glob = "*.md",
recurse = 1) %>%
purrr::map_dfr(rmarkdown::yaml_front_matter) %>%
dplyr::filter(published | is.na(published)) %>%
dplyr::mutate(
authors_short = stringr::str_replace(authors_short,
stringr::coll("Roe, J."),
"**Roe, J.**")
) %>%
dplyr::group_by(year) %>%
dplyr::arrange(desc(year)) %>%
dplyr::group_map(~tibble::tibble(year = .y$year, text = list(c(
"### N/A",
"",
"N/A",
"",
"N/A",
"",
.y$year,
"",
glue::glue_data(.x, "* {authors_short}, *{title}*. Presented at {conference}."),
""
)))) %>%
dplyr::bind_rows() %>%
dplyr::arrange(desc(year)) %>%
dplyr::select(text) %>%
purrr::map(~writeLines(.x))
fs::dir_ls(fs::path(jekyll_root, paste0("_", collections)),
glob = "*.md",
recurse = 1) %>%
purrr::map_dfr(rmarkdown::yaml_front_matter) %>%
dplyr::filter(published | is.na(published)) %>%
dplyr::mutate(
authors_short = stringr::str_replace(authors_short,
stringr::coll("Roe, J."),
"**Roe, J.**")
) %>%
dplyr::group_by(year) %>%
dplyr::arrange(desc(year)) %>%
dplyr::group_map(~tibble::tibble(year = .y$year, text = list(c(
"### N/A",
"",
"N/A",
"",
"N/A",
"",
.y$year,
"",
glue::glue_data(.x, "* {authors_short}, *{title}*. Presented at {conference}."),
""
)))) %>%
dplyr::bind_rows() %>%
dplyr::arrange(desc(year))
?di
?do
fs::dir_ls(fs::path(jekyll_root, paste0("_", collections)),
glob = "*.md",
recurse = 1) %>%
purrr::map_dfr(rmarkdown::yaml_front_matter) %>%
dplyr::filter(published | is.na(published)) %>%
dplyr::mutate(
authors_short = stringr::str_replace(authors_short,
stringr::coll("Roe, J."),
"**Roe, J.**")
) %>%
dplyr::group_by(year) %>%
dplyr::arrange(desc(year)) %>%
dplyr::group_map(~tibble::tibble(year = .y$year, text = list(c(
"### N/A",
"",
"N/A",
"",
"N/A",
"",
.y$year,
"",
glue::glue_data(.x, "* {authors_short}, *{title}*. Presented at {conference}."),
""
)))) %>%
dplyr::bind_rows() %>%
dplyr::arrange(desc(year)) %>%
dplyr::select(text) %>%
unlist()
fs::dir_ls(fs::path(jekyll_root, paste0("_", collections)),
glob = "*.md",
recurse = 1) %>%
purrr::map_dfr(rmarkdown::yaml_front_matter) %>%
dplyr::filter(published | is.na(published)) %>%
dplyr::mutate(
authors_short = stringr::str_replace(authors_short,
stringr::coll("Roe, J."),
"**Roe, J.**")
) %>%
dplyr::group_by(year) %>%
dplyr::arrange(desc(year)) %>%
dplyr::group_map(~tibble::tibble(year = .y$year, text = list(c(
"### N/A",
"",
"N/A",
"",
"N/A",
"",
.y$year,
"",
glue::glue_data(.x, "* {authors_short}, *{title}*. Presented at {conference}."),
""
)))) %>%
dplyr::bind_rows() %>%
dplyr::arrange(desc(year)) %>%
dplyr::select(text) %>%
unlist() %>%
writeLines()
source('~/g/Work/cv/joeroe_cv/render_cv.r', echo=TRUE)
source('~/g/Work/cv/joeroe_cv/render_cv.r', echo=TRUE)
source('~/g/Work/cv/joeroe_cv/render_cv.r', echo=TRUE)
source('~/g/Work/cv/joeroe_cv/render_cv.r', echo=TRUE)
source('~/g/Work/cv/joeroe_cv/render_cv.r', echo=TRUE)
source('~/g/Work/cv/joeroe_cv/render_cv.r', echo=TRUE)
source('~/g/Work/cv/joeroe_cv/render_cv.r', echo=TRUE)
source('~/g/Work/cv/joeroe_cv/render_cv.r', echo=TRUE)
source('~/g/Work/cv/joeroe_cv/render_cv.r', echo=TRUE)
collections <- c("code", "datasets")
fs::dir_ls(fs::path(jekyll_root, paste0("_", collections)),
glob = "*.md",
recurse = 1) %>%
purrr::map_dfr(rmarkdown::yaml_front_matter) %>%
dplyr::filter(published | is.na(published)) %>%
dplyr::mutate(
authors_short = stringr::str_replace(authors_short,
stringr::coll("Roe, J."),
"**Roe, J.**")
) %>%
dplyr::group_by(year)
fs::dir_ls(fs::path(jekyll_root, paste0("_", collections)),
glob = "*.md",
recurse = 1)
fs::dir_ls(fs::path(jekyll_root, paste0("_", collections)),
glob = "*.md",
recurse = 1) %>%
purrr::map_dfr(rmarkdown::yaml_front_matter) %>%
dplyr::filter(published | is.na(published)) %>%
dplyr::mutate(
authors_short = stringr::str_replace(authors_short,
stringr::coll("Roe, J."),
"**Roe, J.**")
) %>%
dplyr::group_by(year)
fs::dir_ls(fs::path(jekyll_root, paste0("_", collections)),
glob = "*.md",
recurse = 1) %>%
purrr::map_dfr(rmarkdown::yaml_front_matter) %>%
dplyr::mutate(
authors_short = stringr::str_replace(authors_short,
stringr::coll("Roe, J."),
"**Roe, J.**")
) %>%
dplyr::group_by(year)
fs::dir_ls(fs::path(jekyll_root, paste0("_", collections)),
glob = "*.md",
recurse = 1) %>%
purrr::map_dfr(rmarkdown::yaml_front_matter) %>%
dplyr::mutate(
authors_short = stringr::str_replace(authors_short,
stringr::coll("Roe, J."),
"**Roe, J.**")
) %>%
dplyr::group_by(year) %>%
dplyr::group_map(~tibble::tibble(year = .y$year, text = list(c(
"### N/A",
"",
"N/A",
"",
"N/A",
"",
.y$year,
"",
glue::glue_data(.x, "* {authors_short}, *[{title}]({website})*."),
""
)))) %>%
dplyr::bind_rows() %>%
dplyr::arrange(desc(year)) %>%
dplyr::select(text) %>%
unlist() %>%
writeLines()
fs::dir_ls(fs::path(jekyll_root, paste0("_", collections)),
glob = "*.md",
recurse = 1) %>%
purrr::map_dfr(rmarkdown::yaml_front_matter) %>%
dplyr::mutate(
authors_short = stringr::str_replace(authors_short,
stringr::coll("Roe, J."),
"**Roe, J.**")
) %>%
dplyr::group_by(year) %>%
dplyr::group_map(~tibble::tibble(year = .y$year, text = list(c(
"### N/A",
"",
"N/A",
"",
"N/A",
"",
.y$year,
"",
glue::glue_data(.x, "* {authors_short}, *[{title}]({website})*."),
""
)))) %>%
dplyr::bind_rows() %>%
dplyr::arrange(desc(year)) %>%
dplyr::select(text) %>%
unlist() %>%
writeLines()
fs::dir_ls(fs::path(jekyll_root, paste0("_", collections)),
glob = "*.md",
recurse = 1) %>%
purrr::map_dfr(rmarkdown::yaml_front_matter) %>%
dplyr::mutate(
authors_short = stringr::str_replace(authors_short,
stringr::coll("Roe, J."),
"**Roe, J.**")
) %>%
dplyr::group_by(year) %>%
dplyr::group_map(~tibble::tibble(year = .y$year, text = list(c(
"### N/A",
"",
"N/A",
"",
"N/A",
"",
.y$year,
"",
glue::glue_data(.x, "* *[{title}]({website})*."),
""
)))) %>%
dplyr::bind_rows() %>%
dplyr::arrange(desc(year)) %>%
dplyr::select(text) %>%
unlist() %>%
writeLines()
fs::dir_ls(fs::path(jekyll_root, paste0("_", collections)),
glob = "*.md",
recurse = 1) %>%
purrr::map_dfr(rmarkdown::yaml_front_matter) %>%
dplyr::mutate(
authors_short = stringr::str_replace(authors_short,
stringr::coll("Roe, J."),
"**Roe, J.**")
) %>%
dplyr::group_by(year) %>%
glue::glue_data(
"### [{title}]({website})"
)
fs::dir_ls(fs::path(jekyll_root, paste0("_", collections)),
glob = "*.md",
recurse = 1) %>%
purrr::map_dfr(rmarkdown::yaml_front_matter) %>%
dplyr::mutate(
authors_short = stringr::str_replace(authors_short,
stringr::coll("Roe, J."),
"**Roe, J.**")
) %>%
dplyr::group_by(year) %>%
glue::glue_data(
"### [{title}]({website})",
"{repository}"
)
fs::dir_ls(fs::path(jekyll_root, paste0("_", collections)),
glob = "*.md",
recurse = 1) %>%
purrr::map_dfr(rmarkdown::yaml_front_matter) %>%
dplyr::mutate(
authors_short = stringr::str_replace(authors_short,
stringr::coll("Roe, J."),
"**Roe, J.**")
) %>%
dplyr::group_by(year) %>%
glue::glue_data(
"### [{title}]({website})",
"{repository}",
.sep = "\n\n"
)
fs::dir_ls(fs::path(jekyll_root, paste0("_", collections)),
glob = "*.md",
recurse = 1) %>%
purrr::map_dfr(rmarkdown::yaml_front_matter) %>%
dplyr::mutate(
authors_short = stringr::str_replace(authors_short,
stringr::coll("Roe, J."),
"**Roe, J.**")
) %>%
dplyr::group_by(year) %>%
glue::glue_data(
"### [{title}]({website})",
"{repository}",
"{year}",
.sep = "\n\n"
)
fs::dir_ls(fs::path(jekyll_root, paste0("_", collections)),
glob = "*.md",
recurse = 1) %>%
purrr::map_dfr(rmarkdown::yaml_front_matter) %>%
dplyr::mutate(
authors_short = stringr::str_replace(authors_short,
stringr::coll("Roe, J."),
"**Roe, J.**")
) %>%
dplyr::group_by(year) %>%
glue::glue_data(
"### [{title}]({website})",
"{repository}",
"{year}",
"",
.sep = "\n\n"
)
source('~/g/Work/cv/joeroe_cv/render_cv.r', echo=TRUE)
fs::dir_ls(fs::path(jekyll_root, paste0("_", collections)),
glob = "*.md",
recurse = 1) %>%
purrr::map_dfr(rmarkdown::yaml_front_matter) %>%
dplyr::mutate(
authors_short = stringr::str_replace(authors_short,
stringr::coll("Roe, J."),
"**Roe, J.**")
) %>%
dplyr::group_by(year) %>%
glue::glue_data(
"### [{title}]({website})",
"{repository}",
"{year}",
"",
.sep = "\n\n"
)
source('~/g/Work/cv/joeroe_cv/render_cv.r', echo=TRUE)
source('~/g/Work/cv/joeroe_cv/render_cv.r', echo=TRUE)
fs::dir_ls(fs::path(jekyll_root, paste0("_", collections)),
glob = "*.md",
recurse = 1) %>%
purrr::map_dfr(rmarkdown::yaml_front_matter) %>%
dplyr::mutate(
authors_short = stringr::str_replace(authors_short,
stringr::coll("Roe, J."),
"**Roe, J.**")
) %>%
dplyr::group_by(year) %>%
dplyr::mutate(short_name = tidyr::replace_na(short_name, title))
collections <- c("code", "datasets")
jekyll_root <- "~/g/Work/web/joeroe.github.io/"
fs::dir_ls(fs::path(jekyll_root, paste0("_", collections)),
glob = "*.md",
recurse = 1) %>%
purrr::map_dfr(rmarkdown::yaml_front_matter) %>%
dplyr::mutate(
authors_short = stringr::str_replace(authors_short,
stringr::coll("Roe, J."),
"**Roe, J.**")
) %>%
dplyr::group_by(year) %>%
dplyr::mutate(short_name = tidyr::replace_na(short_name, title))
glue::glue_data(
"### [{short_name}]({website})",
"{second_line}",
"{year}",
"",
.sep = "\n\n"
)
fs::dir_ls(fs::path(jekyll_root, paste0("_", collections)),
glob = "*.md",
recurse = 1) %>%
purrr::map_dfr(rmarkdown::yaml_front_matter) %>%
dplyr::mutate(
authors_short = stringr::str_replace(authors_short,
stringr::coll("Roe, J."),
"**Roe, J.**")
) %>%
dplyr::group_by(year) %>%
dplyr::mutate(short_name = dplyr::coalesce(short_name, title))
fs::dir_ls(fs::path(jekyll_root, paste0("_", collections)),
glob = "*.md",
recurse = 1) %>%
purrr::map_dfr(rmarkdown::yaml_front_matter) %>%
dplyr::mutate(
authors_short = stringr::str_replace(authors_short,
stringr::coll("Roe, J."),
"**Roe, J.**")
) %>%
dplyr::group_by(year) %>%
dplyr::mutate(
first_line = dplyr::coalesce(short_name, title),
second_line = dplyr::coalesce(repository, title)
) %>%
glue::glue_data(
"### [{first_line}]({website})",
"{second_line}",
"{year}",
"",
.sep = "\n\n"
)
fs::dir_ls(fs::path(jekyll_root, paste0("_", collections)),
glob = "*.md",
recurse = 1) %>%
purrr::map_dfr(rmarkdown::yaml_front_matter) %>%
dplyr::mutate(
authors_short = stringr::str_replace(authors_short,
stringr::coll("Roe, J."),
"**Roe, J.**")
) %>%
dplyr::group_by(year) %>%
dplyr::mutate(
first_line = dplyr::coalesce(short_name, title),
second_line = dplyr::coalesce(repository, title)
) %>%
glue::glue_data(
"### [{first_line}]({website})",
"{second_line}",
"{year}",
"",
.sep = "\n\n"
)
source('~/g/Work/cv/joeroe_cv/render_cv.r', echo=TRUE)
source('~/g/Work/cv/joeroe_cv/render_cv.r', echo=TRUE)
fs::dir_ls(fs::path(jekyll_root, paste0("_", collections)),
glob = "*.md",
recurse = 1) %>%
purrr::map_dfr(rmarkdown::yaml_front_matter) %>%
dplyr::mutate(
authors_short = stringr::str_replace(authors_short,
stringr::coll("Roe, J."),
"**Roe, J.**")
) %>%
dplyr::group_by(year) %>%
dplyr::mutate(
first_line = dplyr::coalesce(short_name, title),
second_line = dplyr::coalesce(repository, title)
) %>%
glue::glue_data(
"### [{first_line}]({website})",
"{second_line}",
"\n",
"{year}",
"",
.sep = "\n\n"
)
source('~/g/Work/cv/joeroe_cv/cv_printing_functions.r', echo=TRUE)
source('~/g/Work/cv/joeroe_cv/render_cv.r', echo=TRUE)
fs::dir_ls(fs::path(jekyll_root, paste0("_", collections)),
glob = "*.md",
recurse = 1) %>%
purrr::map_dfr(rmarkdown::yaml_front_matter) %>%
dplyr::mutate(
authors_short = stringr::str_replace(authors_short,
stringr::coll("Roe, J."),
"**Roe, J.**")
) %>%
dplyr::arrange(desc(year)) %>%
dplyr::mutate(
first_line = dplyr::coalesce(short_name, title),
second_line = dplyr::coalesce(repository, title)
) %>%
glue::glue_data(
"### [{first_line}]({website})",
"{second_line}",
"N/A",
"{year}",
"",
.sep = "\n\n"
)
source('~/g/Work/cv/joeroe_cv/render_cv.r', echo=TRUE)
fs::dir_ls(fs::path(jekyll_root, paste0("_", collections)),
glob = "*.md",
recurse = 1) %>%
purrr::map_dfr(rmarkdown::yaml_front_matter) %>%
dplyr::mutate(
authors_short = stringr::str_replace(authors_short,
stringr::coll("Roe, J."),
"**Roe, J.**")
) %>%
dplyr::arrange(desc(year)) %>%
dplyr::mutate(
repository = tidyr::replace_na(repository, "N/A")
) %>%
glue::glue_data(
"### [{title}]({website})",
"{repository}",
"N/A",
"{year}",
"",
.sep = "\n\n"
)
source('~/g/Work/cv/joeroe_cv/render_cv.r', echo=TRUE)
source('~/g/Work/cv/joeroe_cv/render_cv.r', echo=TRUE)
source('~/g/Work/cv/joeroe_cv/render_cv.r', echo=TRUE)
source('~/g/Work/cv/joeroe_cv/render_cv.r', echo=TRUE)
source('~/g/Work/cv/joeroe_cv/render_cv.r', echo=TRUE)
source('~/g/Work/cv/joeroe_cv/render_cv.r', echo=TRUE)
source('~/g/Work/cv/joeroe_cv/render_cv.r', echo=TRUE)
source('~/g/Work/cv/joeroe_cv/render_cv.r', echo=TRUE)
source('~/g/Work/cv/joeroe_cv/render_cv.r', echo=TRUE)
source('~/g/Work/cv/joeroe_cv/render_cv.r', echo=TRUE)
source('~/g/Work/cv/joeroe_cv/render_cv.r', echo=TRUE)
source('~/g/Work/cv/joeroe_cv/render_cv.r', echo=TRUE)
source('~/g/Work/cv/joeroe_cv/render_cv.r', echo=TRUE)
source('~/g/Work/cv/joeroe_cv/render_cv.r', echo=TRUE)
source('~/g/Work/cv/joeroe_cv/render_cv.r', echo=TRUE)
source('~/g/Work/cv/joeroe_cv/build_cv.R', echo=TRUE)
source('~/g/Work/cv/joeroe_cv/build_cv.R', echo=TRUE)
source('~/g/Work/web/joeroe.github.io/cv/build_cv.R', echo=TRUE)
